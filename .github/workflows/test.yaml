name: Test and build docker image

on: push

jobs:
  build-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.21.x"]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java JDK
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '20'
          distribution: 'zulu'
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: |
            ./go.sum
      - name: Restore config.yaml
        uses: kitek/decode-base64-into-file-action@1.0
        with:
          encoded-value: ${{ secrets.CONFIG_YAML }}
          destination-file: config.yaml
      - name: Install dependencies
        run: go generate ./...
      - name: Build
        run: go build -v ./...
      - name: Test with the Go CLI
        run: go test ./...
      - name: Start server
        run: go run main.go &
        env:
          ADMIN_API_KEY: test
          GPT_ENDPOINT: ${{ secrets.GPT_ENDPOINT }}
          GPT_KEY: ${{ secrets.GPT_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      - name: Run tests
        run: go run cmd/e2e/main.go
  docker:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build docker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          tags: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=dev
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

  create-release:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ (github.event.pusher.name != 'github action') && (github.ref == 'refs/heads/main') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          branch: main
